name: Deploy Medusa Backend to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy Medusa
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      ECS_SERVICE_SERVER: ${{ secrets.ECS_SERVICE_SERVER }}
      ECS_SERVICE_WORKER: ${{ secrets.ECS_SERVICE_WORKER }}

    steps:
    - name: ‚úÖ Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: false

    - name: üîê Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: üîê Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: üê≥ Build and Push Docker image to ECR
      run: |
        IMAGE_TAG=latest
        ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
        IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

        echo "üëâ Building Docker image: $IMAGE_URI"
        docker build -t $IMAGE_URI ./medusa-backend

        echo "üì§ Pushing Docker image to ECR"
        docker push $IMAGE_URI

    - name: üöÄ Update ECS Server Service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE_SERVER \
          --force-new-deployment

    - name: üöÄ Update ECS Worker Service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE_WORKER \
          --force-new-deployment
